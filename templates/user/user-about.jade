extends user/user-base
- load staticfiles
- load gravatar
- load list_processor
- load markdown
- load rating
- load cache
- load i18n
- load reference

block user_media
    style.
        a.edit-profile {
            float: right;
            padding-top: 1em;
        }

        .user-problem-group h3 {
            font-weight: bold;
            font-size: 1.25em;
            margin-bottom: -10px;
            max-height: 20%;
            line-height: 2.5em;
        }

        .user-problem-group ul {
            -webkit-columns: 300px 4;
            -moz-columns: 300px 4;
            columns: 300px 4;
            list-style-type: none;
            margin-top: 0;
            margin-left: -20px;
            margin-bottom: 0;
        }

        .user-problem-group a img {
            max-width: 1em;
            margin-right: 3px;
            padding-bottom: 1px;
            vertical-align: middle;
        }

        .user-info-cell {
            padding-left: 15px;
            border-left: 1px solid #CCC;
        }

        .contest-history-cell {
            border-left: 1px solid #CCC;
            padding: 0 0.5em;
        }

        table td {
            margin: 0;
            vertical-align: top;
        }

        .strike {
            text-align: right;
            overflow: hidden;
        }

        .strike > span {
            position: relative;
            display: inline-block;
        }

        .strike > span:before {
            content: "";
            position: absolute;
            top: 50%;
            width: 100000px;
            height: 1px;
            background: rgba(0, 0, 0, 0.2);
            right: 100%;
            margin-right: 5px;
        }

        #rating-chart {
            height: 400px;
            margin-top: 1em;
        }

        #rating-tooltip {
            display: none;
            position: absolute;
            background: rgba(0, 0, 0, .7);
            color: white;
            padding: 3px;
            border-radius: 3px;
            -webkit-transition: all .1s ease;
            transition: all .1s ease;
            pointer-events: none;
            -webkit-transform: translate(-50%, 0);
            transform: translate(-50%, 0);
        }
        
        #rating-tooltip.rate-group {
            color:white;
        }


block title_ruler

block title_row
    - var user_tab = 'about'
    include user/user-tabs

block user_content
    .content-description
        - with orgs=user.organizations.all
            if orgs
                p(style='margin-top: 0px;')
                    b {% trans "From" %}
                    = ' '
                    each org in orgs
                        a(href='{% url "organization_home" org.key %}')= org.name
                        if not forloop.last
                            = ', '
        if user.about
            h4 {% trans "About" %}
            - cache 86400 user_about user.id
                | #{user.about|with_math:MATH_ENGINE|markdown:"self-description"|reference}
        else
            i
                if user.user == request.user
                    | {% trans "You have not shared any information." %}
                else
                    | {% trans "This user has not shared any information." %}
            br
        if rating
            h4 Rating History
            #rating-chart: canvas
            #rating-tooltip
                .contest
                .date
                .rate-group
                    span.rate-box
                        span
                    span.rating
                    | , #
                    span.rank

block bodyend
    if REQUIRE_JAX
         include mathjax-load
    if ratings
        script(type='text/javascript', src='{% static "libs/chart.js/Chart.Core.js" %}')
        script(type='text/javascript', src='{% static "libs/chart.js/Chart.Scatter.js" %}')
        script(type='text/javascript').
            var rating_history = #{rating_data};
            var data_index = {};

            $.each(rating_history, function (index, item) {
                data_index[item.timestamp.toString() + ',' + item.rating.toString()] = index;
                item.x = new Date(item.timestamp);
                item.y = item.rating;
            });

            $(function () {
                var $canvas = $('#rating-chart').find('canvas');
                var ctx = $canvas.get(0).getContext('2d');
                
                var getItem = function(elements) {
                    return rating_history[data_index[elements[0].arg.toString() + ',' + elements[0].value.toString()]];
                };

                Chart.types.Scatter.extend({
                    name: 'RatingScatter',
                    showTooltip: function (elements) {
                        var $tooltip = $('#rating-tooltip');

                        this.draw();
                        if (elements.length > 0) {
                            var item = getItem(elements);
                            var offset = elements[0].tooltipPosition();

                            $tooltip.find('.contest').text(item.label);
                            $tooltip.find('.date').text(item.date);
                            $tooltip.find('.rate-box').attr('class', 'rate-box ' + item.class)
                                    .find('span').css('height', item.height);
                            $tooltip.find('.rating').text(item.rating).attr('class', 'rating ' + item.class);
                            $tooltip.find('.rank').text(item.ranking);

                            $tooltip.removeClass('above below');
                            $tooltip.addClass(offset.y < $tooltip.height() ? 'below' : 'above');

                            var position = $canvas.offset();
                            var container = $('#page-container').offset();
                            $tooltip.css({
                                left: position.left - container.left + offset.x + $tooltip.width() / 2,
                                top: position.top - container.top + offset.y - $tooltip.height() - 13,
                                fontFamily: this.options.tooltipFontFamily,
                                fontSize: this.options.tooltipFontSize,
                                fontStyle: this.options.tooltipFontStyle
                            }).show();
                        } else
                            $tooltip.hide();

                        return this;
                    }
                });

                window.rating_chart = new Chart(ctx).RatingScatter([
                    {
                        label: 'rating',
                        strokeColor: '#A31515',
                        fillColor: '#A31515',
                        data: rating_history
                    }
                ], {
                    bezierCurve: false,
                    showTooltips: true,
                    scaleShowHorizontalLines: true,
                    scaleShowLabels: true,
                    scaleType: 'date',
                    responsive: true,
                    maintainAspectRatio: false,
                    pointDotRadius: 6,
                    pointHitDetectionRadius: 6
                });
                
                $canvas.click(function(evt) {
                    var elements = window.rating_chart.getPointsAtEvent(evt);
                    if (elements.length > 0) {
                        var item = getItem(elements);
                        window.location.href = item.link;
                    }
                });
                
                $canvas.mousemove(function(evt) {
                    var elements = window.rating_chart.getPointsAtEvent(evt);
                    if (elements.length > 0) {
                        $canvas.css('cursor', 'pointer');
                    } else {
                        $canvas.css('cursor', '');
                    }
                });
            });
