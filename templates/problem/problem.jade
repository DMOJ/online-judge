extends common-content
- load staticfiles
- load markdown_trois_tags
- load cache
- load smart_math
- load filesize
- load camo_proxy

block content_media
    include comments/media

block content_js_media
    include comments/js_media

block title_row
    div.problem-title
        h2(style='color:#393630; display: inline-block')= title
        if wkhtmltopdf_installed
            span.spacer
            a.view-pdf(href='{% url "problem_pdf" problem.code %}')
                span(style='position: relative; display: inline-block; font-size: 1.5em')
                    span.fa.fa-file-pdf-o(style='color: #d40e13')
                    span(style='height: 0.2em; display: block; position: absolute; top: 0.3em; background: #d40e13; width: 0.6em; margin-left: -0.15em')
                = ' View as PDF'

block info_float
    a.unselectable.button.full(href='{% url "problem_submit" problem.code %}') Submit solution
    hr
    if request.user.is_authenticated and has_submissions
        a(href='{% url "user_submissions" problem.code request.user.username %}')
            | My submissions
        br
    a(href='{% url "chronological_submissions" problem.code %}')
        | All submissions
    br
    a(href='{% url "ranked_submissions" problem.code %}')
        | Best submissions

    if perms.judge.change_problem or perms.judge.edit_own_problem and request.user.profile.id in problem.author_ids or perms.judge.edit_public_problem and problem.is_public
        hr
        a(href='{% url "admin:judge_problem_change" problem.id %}')
            | Edit problem
        br
    if perms.judge.clone_problem
        a(href='{% url "problem_clone" problem.code %}')
            | Clone problem
        br
    hr
    br
    i.fa.fa-check.fa-fw
    b Points:
    if contest_problem
        |  #{contest_problem.points}
        if contest_problem.partial
            | (partial)
    else
        |  #{problem.points|floatformat}
        if problem.partial
            | (partial)
    br
    i.fa.fa-clock-o.fa-fw
    b Time limit:
    |  #{problem.time_limit}s
    br
    i.fa.fa-database.fa-fw
    b Memory limit:
    |  #{problem.memory_limit|kbsimpleformat}
    br
    - cache 86400 problem_authors problem.id
        - with authors=problem.authors.all
            if authors
                i.fa.fa-pencil-square.fa-fw
                if authors|length > 1
                    b Authors:
                else
                    b Author:
                = ' '
                for author in authors
                    span(class=author.display_rank)
                        a(href='{% url "user_page" author.user.username %}') #{author.user.username}
                    if not forloop.last
                        = ', '
                br
    br
    div#problem-types
        div.toggle.closed.unselectable
            span.fa.fa-chevron-right.fa-fw
            | Problem type(s)
        div.toggled(style="display:none") #{problem.types_list|join:", "}
    br
    if show_languages
        div#allowed-langs
            div.toggle.open.unselectable
                span.fa.fa-chevron-right.fa-fw
                | Allowed languages
            div.toggled(style="margin-bottom:-1em")
                - with usable=problem.usable_common_names langs=problem.languages_list
                    each lang in langs
                        if lang in usable
                            = lang
                        else
                            del(title='No {{ lang }} judge online')= lang
                        if not forloop.last
                            = ', '
        br

block description
    - detect_svg use_svg
    - cache 86400 problem_html problem.id use_svg
        | #{problem.description|markdown:"problem"|smart_svg_math:use_svg|proxy_images}
    - with license=problem.license
        if license
            span(style='float: left; font-size: 0.85em')
                a(style='color: gray; text-decoration: none', href='{% url "license" license.key %}')= license.display

block comments
    .comment-area
        h2
            i.fa.fa-comments(style='padding-right: 0.2em')
            | Comments
        include comments/list

block bodyend
    | #{block.super}
    include comments/math
