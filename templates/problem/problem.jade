extends common-content
- load staticfiles
- load markdown
- load cache
- load filesize
- load i18n
- load reference
- load tz

block content_media
    include comments/media-css
    style.
        .title-state {
            font-size: 2em;
            float: left;
            width: 1.1em;
            display: block;
            margin-top: 0.16em;
        }

        .info-float a {
            vertical-align: middle;
        }

        .problem-clarification {
            border-bottom: 1px solid #ccc;
            margin-top: 1em;
            margin-bottom: 1em;
        }

        .clarifications-area h2 {
            margin-bottom: 20px;
        }

        .problem-clarification .body {
            display: inline-block;
            padding-left: 3em;
        }

block content_js_media
    include comments/media-js
    script.
        $(function () {
            $('a#clone-link').click(function (event) {
                event.preventDefault();
                if (confirm('Are you sure you want to clone?'))
                    $(this).closest("form").submit();
            })
        });

block title_row
    div.problem-title
        if request.user.is_authenticated
            if problem.id in completed_problem_ids
                a(href='{% url "user_submissions" problem.code request.user.username %}')
                    if problem.is_public or IN_CONTEST
                        i.solved-problem-color.title-state.fa.fa-check-circle
                    else
                        i.solved-problem-color.title-state.fa.fa-lock
            else
                if problem.id in attempted_problems
                    a(href='{% url "user_submissions" problem.code request.user.username %}')
                        if problem.is_public or IN_CONTEST
                            i.attempted-problem-color.title-state.fa.fa-minus-circle
                        else
                            i.attempted-problem-color.title-state.fa.fa-lock

        h2(style='color:#393630; display: inline-block')= title
        if has_pdf_render
            span.spacer
            a.view-pdf(href='{% url "problem_pdf" problem.code %}')
                span(style='position: relative; display: inline-block; font-size: 1.5em')
                    span.fa.fa-file-pdf-o(style='color: #d40e13')
                    span(style='height: 0.2em; display: block; position: absolute; top: 0.3em; background: #d40e13; width: 0.6em; margin-left: -0.15em')
                |  {% trans "View as PDF" %}

block info_float
    if request.user.is_authenticated and IN_CONTEST
        if submission_limit
            if submissions_left > 0
                a.unselectable.button.full(href='{% url "problem_submit" problem.code %}') {% trans "Submit solution" %}
                .submissions-left
                    - blocktrans trimmed count counter=submissions_left
                      | {{ counter }} submission left
                      - plural
                      | {{ counter }} submissions left
            else
                a.unselectable.button.full.disabled {% trans "Submit solution" %}
                .no-submissions-left.submissions-left {% trans "0 submissions left" %}
        else
            a.unselectable.button.full(href='{% url "problem_submit" problem.code %}') {% trans "Submit solution" %}
    else
        a.unselectable.button.full(href='{% url "problem_submit" problem.code %}') {% trans "Submit solution" %}

    hr
    if request.user.is_authenticated and has_submissions
        div: a(href='{% url "user_submissions" problem.code request.user.username %}')
            | {% trans "My submissions" %}
    div: a(href='{% url "chronological_submissions" problem.code %}') {% trans "All submissions" %}
    div: a(href='{% url "ranked_submissions" problem.code %}') {% trans "Best submissions" %}

    if editorial and editorial.is_public
        hr
        div: a(href='{% url "problem_editorial" problem.code %}') Read editorial

    if can_edit_problem
        hr
        div: a(href='{% url "problem_ticket_list" problem.code %}') {% trans "Manage tickets" %}
            if num_open_tickets
                = ' '
                span.badge=num_open_tickets
        div: a(href='{% url "admin:judge_problem_change" problem.id %}') {% trans "Edit problem" %}
        if not problem.is_manually_managed
            div: a(href='{% url "problem_data" problem.code %}') {% trans "Edit test data" %}

    if perms.judge.clone_problem
        div: form(action='{% url "problem_clone" problem.code %}', method='post')
            - csrf_token
            a#clone-link(href='#') {% trans "Clone problem" %}
    hr
    br
    .problem-info-entry
        i.fa.fa-check.fa-fw
        span.pi-name {% trans "Points:" %}
        span.pi-value
            if contest_problem
                | #{contest_problem.points}
                if contest_problem.partial
                    - trans "(partial)"
            else
                | #{problem.points|floatformat}
                if problem.partial
                    - trans "(partial)"
    .problem-info-entry
        i.fa.fa-clock-o.fa-fw
        span.pi-name {% trans "Time limit:" %}
        span.pi-value #{problem.time_limit}s
    .problem-lang-limits
        for name, limit in problem.language_time_limit
            .lang-limit
                span.lang-name= name
                span.lang-tl #{limit}s
    .problem-info-entry
        i.fa.fa-server.fa-fw
        span.pi-name {% trans "Memory limit:" %}
        span.pi-value #{problem.memory_limit|kbsimpleformat}
    .problem-lang-limits
        for name, limit in problem.language_memory_limit
            .lang-limit
                span.lang-name= name
                span.lang-ml #{limit|kbsimpleformat}
    - get_current_language as LANGUAGE_CODE
    - cache 86400 problem_authors problem.id LANGUAGE_CODE
        - with authors=problem.authors.all
            if authors
                .problem-info-entry
                    i.fa.fa-pencil-square-o.fa-fw
                    span.pi-name
                        - blocktrans trimmed count counter=authors|length
                            | Author:
                            - plural
                            | Authors:
                    div.pi-value.authors-value {% include "link-to-user-list.jade" with users=authors %}
    br
    if not contest_problem or not contest_problem.contest.hide_problem_tags
        div#problem-types
            - with types=problem.types_list
                div.toggle.closed.unselectable
                    span.fa.fa-chevron-right.fa-fw
                    - blocktrans trimmed count counter=problem.types_list|length
                        | Problem type
                        - plural
                        | Problem types
                div.toggled(style="display:none") #{problem.types_list|join:", "}
        br
    if show_languages
        div#allowed-langs
            div.toggle.open.unselectable
                span.fa.fa-chevron-right.fa-fw
                | {% trans "Allowed languages" %}
            div.toggled(style="margin-bottom:-1em")
                - with usable=problem.usable_common_names langs=problem.languages_list
                    each lang in langs
                        if lang in usable
                            = lang
                        else
                            s(title='{% blocktrans %}No {{ lang }} judge online{% endblocktrans %}')= lang
                        if not forloop.last
                            = ', '
        br

block description
    - cache 86400 problem_html problem.id MATH_ENGINE LANGUAGE_CODE
        | #{description|with_math:MATH_ENGINE|markdown:"problem"|reference}
    - with license=problem.license
        if license
            span(style='float: left; font-size: 0.85em')
                a(style='color: gray; text-decoration: none', href='{% url "license" license.key %}')
                    | #{license.display|default:license.name}

block post_description_end
    if perms.judge.test_site
        a.button(style='float:right', href='{% url "new_problem_ticket" problem.code %}')
            if contest_problem and contest_problem.contest.use_clarifications
                | {% trans "Request clarification" %}
            else
                | {% trans "Report an issue" %}

block comments
    if contest_problem and contest_problem.contest.use_clarifications
        .clarifications-area
            h2
                i.fa.fa-question-circle(style='padding-right: 0.3em')
                | {% trans "Clarifications" %}
            if has_clarifications
                for clarification in clarifications
                    .problem-clarification
                        .time(data-unix='{{ clarification.date|utc|date:"c" }}')
                            - blocktrans with time=clarification.date|date:_("N j, Y, g:i a") asvar str_time
                                | on {{ time }}
                            span.relative= str_time
                        span.body #{clarification.description|with_math:MATH_ENGINE|markdown:"problem"|reference}
            else
                p.no-comments-message {% trans "No clarifications have been made at this time." %}
    else
        include comments/list

block bodyend
    | #{block.super}
    include comments/math
