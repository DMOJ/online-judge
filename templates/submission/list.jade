extends common-content
- load staticfiles
- load cache
- load cache_key
- load compress

block js_media
    if dynamic_update and last_msg
        script(type='text/javascript')
            if IN_CONTEST
                | window.current_contest = '#{CONTEST.contest.key}';
            else
                | window.current_contest = null;
            if dynamic_user_id
                | window.dynamic_user_id = #{dynamic_user_id};
            else
                | window.dynamic_user_id = null;
            if dynamic_problem_id
                | window.dynamic_problem_id = #{dynamic_problem_id};
            else
                | window.dynamic_problem_id = null;
            if show_problem
                | window.show_problem = 1;
            else
                | window.show_problem = 0;

    - compress js
        script(type='text/javascript', src='{% static "event.js" %}')
        script(type='text/javascript', src='{% static "moment.min.js" %}')
        if request.user.is_authenticated and perms.judge.rejudge_submission
            script(type='text/javascript', src='{% static "jquery-cookie.js" %}')
            script(type='text/javascript').
                window.rejudge_submission = function(id) {
                    if (confirm('Are you sure you want to rejudge?')) {
                        $.ajax({
                            url: '{% url "submission_rejudge" %}',
                            type: "POST",
                            data: {
                                id: id,
                                csrfmiddlewaretoken: $.cookie('csrftoken')
                            }
                        });
                    }
                };
        script(type='text/javascript').
            $(function () {
                var info_float = $('.info-float');
                var container = $('#content-right');
                if (window.bad_browser) {
                    container.css('float', 'right');
                } else if (!featureTest('position', 'sticky')) {
                    fix_div(info_float, 55);
                    $(window).resize(function () {
                        info_float.width(container.width());
                    });
                    info_float.width(container.width());
                }

                var time_cache = {};
                window.update_relative_time = function (row) {
                    var id = row.attr('id');
                    if (!(id in time_cache))
                        time_cache[id] = row.find('span.time .absolute').text();
                    // TODO: only if within the last X hours
                    var when = moment(row.find('span.moment').text());
                    if(Math.abs(moment().diff(when, 'days')) < 1)
                        row.find('span.time .relative').text(when.fromNow());
                    row.find('span.time .absolute').text(time_cache[id]);
                };

                function update_all_time() {
                    $('#submissions-table').find('tr').each(function () {
                        update_relative_time($(this));
                    });
                }
                setInterval(update_all_time, 60000);
                update_all_time();
            });

        if dynamic_update and last_msg
            script(type='text/javascript').
                $(function () {
                    var table = $('#submissions-table');
                    var statistics = $("#statistics-table");
                    var doing_ajax = false;
                    var first = parseInt(table.find('tr:first-child').attr('id'));

                    var update_submission = function (id, force) {
                        var row = table.find('tr#' + id);
                        if (row.length < 1) {
                            if (id < first)
                                return;
                            first = id;
                            row = $('<tr/>', {id: id}).hide().prependTo(table);
                            table.find('tr:last-child').hide('slow', function () {
                                $(this).remove();
                            });
                        }
                        if (force || !doing_ajax) {
                            if (!force) doing_ajax = true;
                            $.ajax({
                                url: '{% url "submission_single_query" %}',
                                data: {id: id, show_problem: show_problem}
                            }).done(function (data) {
                                var was_shown = row.is(':visible');
                                row.html(data);
                                update_relative_time(row);
                                if (!was_shown)
                                    row.show('slow');
                                if (!force) doing_ajax = false;
                            }).fail(function () {
                                console.log('Failed to update submission: ' + id);
                                if (!force) doing_ajax = false;
                            });
                        }
                    };

                    var $body = $(document.body);
                    var receiver = new EventReceiver(
                            "{{ EVENT_DAEMON_LOCATION }}", "{{ EVENT_DAEMON_POLL_LOCATION }}",
                            ['submissions'], #{last_msg}, function (message) {
                                if (current_contest && message.contest != current_contest)
                                    return;
                                if (dynamic_user_id && message.user != dynamic_user_id ||
                                    dynamic_problem_id && message.problem != dynamic_problem_id)
                                    return;
                                if (message.type == 'update-submission') {
                                    if (message.state == 'grading-end')
                                        return;
                                    if (message.state == 'test-case' && $body.hasClass('window-hidden'))
                                        return;
                                    update_submission(message.id);
                                } else if (message.type == 'done-submission') {
                                    update_submission(message.id, true);

                                    $.ajax({
                                        url: '?results'
                                    }).done(function (data) {
                                        statistics.html(data);
                                    }).fail(function () {
                                        console.log('Failed to update statistics table!' + id);
                                    });
                                }
                            }
                    );
                });

block media
    if perms.judge.change_submission and perms.judge.rejudge_submission
        style.
            td.sub-prop, col.sub-prop { width: 22% }
            col.sub-info, td.sub-info { width: 78% }

block body
    #common-content
        #content-right.submission
            .info-float
                #statistics-table
                    include problem/statistics_table
        #content-left.submission
            if page_obj.num_pages > 1
                div(style='margin-bottom:10px;')
                    include list_pages

            table#submissions-table.table
                colgroup
                    col.sub-result
                    col.sub-info
                    col.sub-testcase
                    col.sub-prop
                    col.sub-usage
                if request.user.is_authenticated
                    - var profile_id = request.user.profile.id
                else
                    - var profile_id = 0
                each submission in submissions
                    tr(id=submission.id)
                        include submission/row

            if page_obj.num_pages > 1
                div(style='margin-top:10px;')
                    include list_pages

block bodyend
// Don't load MathJax from common-content!
