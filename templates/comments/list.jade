- load staticfiles
- load markdown
- load mptt_tags
- load gravatar
- load i18n
- load tz
- load rating
- load reference

.comment-area#comments
    h2
        i.fa.fa-comments(style='padding-right: 0.3em')
        | {% trans "Comments" %}
    if has_comments
        ul.comments.top-level-comments.new-comments
            - var logged_in = request.user.is_authenticated
            if logged_in
                - var profile = request.user.profile
            - recursetree comment_list
                if not node.hidden
                    li.comment(id='comment-{{ node.id }}',
                               data-revision=node.revisions - 1,
                               data-max-revision=node.revisions - 1,
                               data-revision-ajax='{% url "comment_revision_ajax" node.id %}'): .comment-display
                        .info
                            .vote
                                if request.user.is_authenticated
                                    a.upvote-link.fa.fa-chevron-up.fa-fw(class=('voted' if node.vote_score == 1 else ''), href='javascript:comment_upvote({{ node.id }})')
                                else
                                    a.upvote-link.fa.fa-chevron-up.fa-fw(href='javascript:void(0)', title='{% trans "Please login to vote" %}')
                                br
                                .comment-score #{node.score}
                                if request.user.is_authenticated
                                    a.downvote-link.fa.fa-chevron-down.fa-fw(class=('voted' if node.vote_score == -1 else ''), href='javascript:comment_downvote({{ node.id }})')
                                else
                                    a.downvote-link.fa.fa-chevron-down.fa-fw(href='javascript:void(0)', title='{% trans "Please login to vote" %}')
                            a.user(href='{% url "user_page" node.author.user.username %}')
                                img.gravatar(src='{% gravatar_url node.author.user.email 135 node.author.mute %}')
                        .detail
                            .header
                                a.username(href='{% url "user_page" node.author.user.username %}',
                                           class='rating {{ node.author.rating|rating_class }} {{node.author.display_rank}}') #{node.author.user.username}
                                .relative-time
                                span.comment-time(data-unix='{{ node.time|utc|date:"c" }}')
                                    | &nbsp;{% trans "commented" %}
                                    - blocktrans with time=node.time|date:_("N j, Y") asvar str_time
                                        | on {{ time }}
                                    span.relative= str_time
                                span.comment-spacer
                                span.comment-operation
                                    if node.revisions > 1
                                        span.comment-edits
                                            a.previous-revision(href='javascript:show_revision({{ node.id }}, -1)') &larr;
                                            span.comment-edit-text
                                                if node.revisions > 2
                                                    = ' '
                                                    - var edits = node.revisions - 1
                                                    - blocktrans
                                                        | edit {{ edits }}
                                                    = ' '
                                                else
                                                    = ' '
                                                    | {% trans "edited" %}
                                            a.next-revision(href='javascript:show_revision({{ node.id }}, 1)', style='visibility: hidden') &rarr;
                                    else
                                        span.comment-edits
                                    a.comment-link(href='#comment-{{ node.id }}', title='{% trans "Link" %}')
                                        i.fa.fa-link.fa-fw
                                    if logged_in
                                        - var can_edit = node.author.id == profile.id and not profile.mute
                                        if can_edit
                                            a.edit-link(data-featherlight='{% url "comment_edit_ajax" node.id %}',
                                                        href='{% url "comment_edit" node.id %}', title='{% trans "Edit" %}')
                                                i.fa.fa-pencil.fa-fw
                                        else
                                            a(href='javascript:comment_set_parent({{ node.id }})', title='{% trans "Reply" %}')
                                                i.fa.fa-reply.fa-fw
                                        if perms.judge.change_comment
                                            if can_edit
                                                a(href='javascript:comment_set_parent({{ node.id }})', title='{% trans "Reply" %}')
                                                    i.fa.fa-reply.fa-fw
                                            else
                                                a.edit-link(data-featherlight='{% url "comment_edit_ajax" node.id %}',
                                                            href='{% url "comment_edit" node.id %}', title='{% trans "Edit" %}')
                                                    i.fa.fa-pencil.fa-fw
                                            a.hide-comment(href='javascript:;', title='{% trans "Hide" %}', data-id=node.id)
                                                i.fa.fa-trash.fa-fw
                                            a(href='{% url "admin:judge_comment_change" node.id %}', title='{% trans "Admin" %}')
                                                i.fa.fa-cog.fa-fw
                            .content.content-description
                                .comment-title(style=('display: none' if not node.title or node.title.startswith('Re:') else '')) #{node.title}
                                .comment-body #{node.body|with_math:MATH_ENGINE|with_lazy_load:True|markdown:"comment"|reference}

                    if not node.is_leaf_node
                        ul.comments
                            | {{ children }}

            - endrecursetree
    else
        p.no-comments-message {% trans "There are no comments at the moment." %}

    if request.user.is_authenticated and comment_form
        .form-area.comment-submit
            block comment_submit_title
                h3 {% trans "New comment" %}
                hr
            if is_new_user
                .alert.alert-info(style='margin-bottom: 0')
                    - trans "You need to have solved at least one problem before your voice can be heard."
            else
                form#comment-submit(action='', method='post')
                    - csrf_token
                    if comment_form.errors
                        #form-errors
                            | #{comment_form.non_field_errors}
                            | #{comment_form.parent.errors}
                            if comment_form.body.errors
                                | {% trans "Invalid comment body." %}
                    | #{comment_form.parent}
                    .comment-post-wrapper
                        #comment-form-body
                            | #{comment_form.body}
                    hr
                    input.button(style='float:right', type='submit', value='{% trans "Post!" %}')
