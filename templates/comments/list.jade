- load staticfiles
- load markdown_trois_tags
- load mptt_tags
- load gravatar
- load camo_proxy
- load lazy_load
- load i18n

ul.comments.top-level-comments
    if has_comments
        - var logged_in = request.user.is_authenticated
        if logged_in
            - var profile = request.user.profile
        - recursetree comment_list
            if not node.hidden
                li.comment(id='comment-{{ node.id }}')
                    .comment-box
                        div(style='float:left')
                            if request.user.is_authenticated
                                a.upvote-link.fa.fa-chevron-up.fa-fw(href='javascript:comment_upvote({{ node.id }})')
                            else
                                a.upvote-link.fa.fa-chevron-up.fa-fw(href='javascript:void(0)', title='Please login to vote')
                            br
                            .comment-score #{node.score}
                            if request.user.is_authenticated
                                a.downvote-link.fa.fa-chevron-down.fa-fw(href='javascript:comment_downvote({{ node.id }})')
                            else
                                a.downvote-link.fa.fa-chevron-down.fa-fw(href='javascript:void(0)', title='Please login to vote')
                            br
                        .comment-header
                            span.comment-info
                                span.comment-author
                                    - gravatar_url node.author.user.email 24 node.author.mute as gravatar
                                    noscript
                                        img(src=gravatar, width='24', height='24')
                                    img.unveil(src='{% static "blank.gif" %}', data-src=gravatar, width='24', height='24')
                                    span(class=node.author.display_rank)
                                        a(href='{% url "user_page" node.author.user.username %}') #{node.author.user.username}
                                = ' on '
                                span.comment-time #{node.time|date:"N j, o, g:i a"}
                                = ' '
                                span.comment-title #{node.title}
                            span.comment-spacer
                            span.comment-operation
                                if node.revisions > 2
                                    span.comment-edits
                                        - var edits = node.revisions - 1
                                        | #{edits} edits
                                elif node.revisions > 1
                                    span.comment-edits edited
                                else
                                    span.comment-edits
                                a.comment-link(href='#comment-{{ node.id }}', title='Link')
                                    i.fa.fa-link.fa-fw
                                a.history-link(data-featherlight='{% url "comment_history_ajax" node.id %}',
                                               href='{% url "comment_history" node.id %}', title='History')
                                    i.fa.fa-history.fa-fw
                                if logged_in
                                    - var can_edit = node.author.id == profile.id and not profile.mute
                                    if can_edit
                                        a.edit-link(data-featherlight='{% url "comment_edit_ajax" node.id %}',
                                                    href='{% url "comment_edit" node.id %}', title='Edit')
                                            i.fa.fa-pencil.fa-fw
                                    else
                                        a(href='javascript:comment_set_parent({{ node.id }})', title='Reply')
                                            i.fa.fa-reply.fa-fw
                                    if perms.judge.change_comment
                                        if can_edit
                                            a(href='javascript:comment_set_parent({{ node.id }})', title='Reply')
                                                i.fa.fa-reply.fa-fw
                                        else
                                            a.edit-link(data-featherlight='{% url "comment_edit_ajax" node.id %}',
                                                        href='{% url "comment_edit" node.id %}', title='Edit')
                                                i.fa.fa-pencil.fa-fw
                                        a(href='{% url "admin:judge_comment_change" node.id %}', title='Admin')
                                            i.fa.fa-cog.fa-fw
                        .comment-body.content-description #{node.body|markdown:"comment"|proxy_images|lazy_load}
                        if not node.is_leaf_node 
                            ul.comments
                                | {{ children }}
        - endrecursetree
    else
        p {% trans "There are no comments at the moment." %}

if request.user.is_authenticated and comment_form
    .form-area.comment-submit
        block comment_submit_title
            h3 {% trans "New comment" %}
            hr
        form#comment-submit(action='', method='post')
            - csrf_token
            if comment_form.errors
                #form-errors
                    | #{comment_form.non_field_errors}
                    | #{comment_form.parent.errors}
                    if comment_form.title.errors
                        | {% trans "Invalid comment title." %}
                        br
                    if comment_form.body.errors
                        | {% trans "Invalid comment body." %}
            | #{comment_form.parent}
            .comment-post-wrapper
                #comment-form-title
                    | #{comment_form.title}
                #comment-form-body
                    | #{comment_form.body}
            hr
            input.button(style='float:right', type='submit', value='Post!')
